import type { DefineComponent, ComputedRef, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, PropType } from 'vue';
import { MarkerUnits } from "../common/configs";
declare const _sfc_main: DefineComponent<{
    width: {
        type: NumberConstructor;
        required: true;
    };
    height: {
        type: NumberConstructor;
        required: true;
    };
    refX: {
        type: NumberConstructor;
        required: true;
    };
    color: {
        type: StringConstructor;
        required: true;
    };
    isSource: {
        type: BooleanConstructor;
        required: true;
    };
    units: {
        type: PropType<MarkerUnits>;
        required: true;
    };
}, {
    props: Readonly<{
        color: string;
        width: number;
        height: number;
        refX: number;
        units: MarkerUnits;
        isSource: boolean;
    }>;
    angleStroke: ComputedRef<number>;
    anglePoints: ComputedRef<string>;
}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, Record<string, any>, string, VNodeProps & AllowedComponentProps & ComponentCustomProps, Readonly<{
    width?: unknown;
    height?: unknown;
    refX?: unknown;
    color?: unknown;
    isSource?: unknown;
    units?: unknown;
} & {
    color: string;
    width: number;
    height: number;
    refX: number;
    units: MarkerUnits;
    isSource: boolean;
} & {}>, {}>;
export default _sfc_main;
